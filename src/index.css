@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Light Mode - Spiritual Theme */
    --background: 45 100% 96%;
    --foreground: 225 15% 15%;

    --card: 0 0% 100%;
    --card-foreground: 225 15% 15%;

    --popover: 0 0% 100%;
    --popover-foreground: 225 15% 15%;

    --primary: 255 85% 65%;
    --primary-foreground: 0 0% 100%;

    --secondary: 45 100% 85%;
    --secondary-foreground: 225 15% 15%;

    --muted: 45 50% 92%;
    --muted-foreground: 225 10% 45%;

    --accent: 180 95% 75%;
    --accent-foreground: 225 15% 15%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 45 30% 88%;
    --input: 45 30% 88%;
    --ring: 255 85% 65%;

    --radius: 0.75rem;

    /* Spiritual gradients */
    --gradient-spiritual: linear-gradient(135deg, hsl(255 85% 65%) 0%, hsl(320 85% 70%) 50%, hsl(180 95% 75%) 100%);
    --gradient-peace: linear-gradient(180deg, hsl(255 85% 65% / 0.1) 0%, hsl(180 95% 75% / 0.1) 100%);
    --gradient-divine: linear-gradient(45deg, hsl(255 85% 65%) 0%, hsl(290 85% 70%) 100%);
    
    /* Shadows */
    --shadow-spiritual: 0 10px 30px hsl(255 85% 65% / 0.2);
    --shadow-divine: 0 0 40px hsl(255 85% 65% / 0.3);
    
    /* Animations */
    --transition-divine: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark {
    /* Dark Mode - Deep Spiritual Theme */
    --background: 225 25% 8%;
    --foreground: 210 40% 98%;

    --card: 225 25% 10%;
    --card-foreground: 210 40% 98%;

    --popover: 225 25% 10%;
    --popover-foreground: 210 40% 98%;

    --primary: 255 85% 65%;
    --primary-foreground: 225 25% 8%;

    --secondary: 225 20% 15%;
    --secondary-foreground: 210 40% 98%;

    --muted: 225 20% 12%;
    --muted-foreground: 215 20% 65%;

    --accent: 180 95% 75%;
    --accent-foreground: 225 25% 8%;

    --destructive: 0 75% 55%;
    --destructive-foreground: 210 40% 98%;

    --border: 225 20% 15%;
    --input: 225 20% 15%;
    --ring: 255 85% 65%;

    /* Dark spiritual gradients */
    --gradient-spiritual: linear-gradient(135deg, hsl(255 85% 65%) 0%, hsl(320 85% 70%) 50%, hsl(180 95% 75%) 100%);
    --gradient-peace: linear-gradient(180deg, hsl(255 85% 65% / 0.05) 0%, hsl(180 95% 75% / 0.05) 100%);
    --gradient-divine: linear-gradient(45deg, hsl(255 85% 65%) 0%, hsl(290 85% 70%) 100%);
    
    /* Dark shadows */
    --shadow-spiritual: 0 10px 30px hsl(255 85% 65% / 0.4);
    --shadow-divine: 0 0 60px hsl(255 85% 65% / 0.5);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* Pyramid Loader Styles */
.pyramid-loader {
  position: relative;
  width: 300px;
  height: 300px;
  display: block;
  transform-style: preserve-3d;
  transform: rotateX(-20deg);
}

.pyramid-loader .wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
}

.pyramid-dark .wrapper {
  animation: spin 4s linear infinite;
}

.pyramid-light .wrapper {
  animation: spin 6s linear infinite;
}

@keyframes spin {
  100% {
    transform: rotateY(360deg);
  }
}

.pyramid-loader .side {
  width: 70px;
  height: 70px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform-origin: center top;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

/* Dark Mode Pyramid */
.pyramid-dark .side1 {
  transform: rotateZ(-30deg) rotateY(90deg);
  background: conic-gradient(#2BDEAC, #F028FD, #D8CCE6, #2F2585);
}

.pyramid-dark .side2 {
  transform: rotateZ(30deg) rotateY(90deg);
  background: conic-gradient(#2F2585, #D8CCE6, #F028FD, #2BDEAC);
}

.pyramid-dark .side3 {
  transform: rotateX(30deg);
  background: conic-gradient(#2F2585, #D8CCE6, #F028FD, #2BDEAC);
}

.pyramid-dark .side4 {
  transform: rotateX(-30deg);
  background: conic-gradient(#2BDEAC, #F028FD, #D8CCE6, #2F2585);
}

.pyramid-dark .shadow {
  width: 60px;
  height: 60px;
  background: #8B5AD5;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform: rotateX(90deg) translateZ(-40px);
  filter: blur(12px);
}

/* Light Mode Pyramid */
.pyramid-light .side1 {
  transform: rotateZ(-30deg) rotateY(90deg);
  background: conic-gradient(#ff6d70, #ff6d70, #ffe600, #ffe600);
  box-shadow: 0 0 10px rgba(255, 99, 71, 0.5);
}

.pyramid-light .side2 {
  transform: rotateZ(30deg) rotateY(90deg);
  background: conic-gradient(#ffe600, #ffe600, #6cffd6, #6cffd6);
  box-shadow: 0 0 10px rgba(255, 99, 71, 0.5);
}

.pyramid-light .side3 {
  transform: rotateX(30deg);
  background: conic-gradient(#6cffd6, #6cffd6, #ff6d70, #ff6d70);
  box-shadow: 0 0 10px rgba(255, 99, 71, 0.5);
}

.pyramid-light .side4 {
  transform: rotateX(-30deg);
  background: conic-gradient(#ff6d70, #ff6d70, #ffe600, #ffe600);
  box-shadow: 0 0 10px rgba(255, 99, 71, 0.5);
}

.pyramid-light .shadow {
  width: 60px;
  height: 60px;
  background: linear-gradient(rgba(255, 99, 71, 0.8), rgba(255, 99, 71, 0.4));
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform: rotateX(90deg) translateZ(-40px);
  filter: blur(8px);
  border-radius: 50%;
  box-shadow: 0 0 20px rgba(255, 99, 71, 0.8);
}

/* Neo Toggle Styles */
.neo-toggle-container {
  --toggle-width: 80px;
  --toggle-height: 38px;
  --toggle-bg: #181c20;
  --toggle-off-color: #475057;
  --toggle-on-color: #36f9c7;
  --toggle-transition: 0.4s cubic-bezier(0.25, 1, 0.5, 1);

  position: relative;
  display: inline-flex;
  flex-direction: column;
  font-family: "Segoe UI", Tahoma, sans-serif;
  user-select: none;
}

.neo-toggle-input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.neo-toggle {
  position: relative;
  width: var(--toggle-width);
  height: var(--toggle-height);
  display: block;
  cursor: pointer;
  transform: translateZ(0);
  perspective: 500px;
}

.neo-track {
  position: absolute;
  inset: 0;
  border-radius: calc(var(--toggle-height) / 2);
  overflow: hidden;
  transform-style: preserve-3d;
  transform: translateZ(-1px);
  transition: transform var(--toggle-transition);
  box-shadow:
    0 2px 10px rgba(0, 0, 0, 0.5),
    inset 0 0 0 1px rgba(255, 255, 255, 0.1);
}

.neo-background-layer {
  position: absolute;
  inset: 0;
  background: var(--toggle-bg);
  background-image: linear-gradient(
    -45deg,
    rgba(20, 20, 20, 0.8) 0%,
    rgba(30, 30, 30, 0.3) 50%,
    rgba(20, 20, 20, 0.8) 100%
  );
  opacity: 1;
  transition: all var(--toggle-transition);
}

.neo-grid-layer {
  position: absolute;
  inset: 0;
  background-image: linear-gradient(
      to right,
      rgba(71, 80, 87, 0.05) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgba(71, 80, 87, 0.05) 1px, transparent 1px);
  background-size: 5px 5px;
  opacity: 0;
  transition: opacity var(--toggle-transition);
}

.neo-track-highlight {
  position: absolute;
  inset: 1px;
  border-radius: calc(var(--toggle-height) / 2);
  background: linear-gradient(90deg, transparent, rgba(54, 249, 199, 0));
  opacity: 0;
  transition: all var(--toggle-transition);
}

.neo-spectrum-analyzer {
  position: absolute;
  bottom: 6px;
  right: 10px;
  height: 10px;
  display: flex;
  align-items: flex-end;
  gap: 2px;
  opacity: 0;
  transition: opacity var(--toggle-transition);
}

.neo-spectrum-bar {
  width: 2px;
  height: 3px;
  background-color: var(--toggle-on-color);
  opacity: 0.8;
}

.neo-thumb {
  position: absolute;
  top: 4px;
  left: 4px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  transform-style: preserve-3d;
  transition: transform var(--toggle-transition);
  z-index: 1;
}

.neo-thumb-ring {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: 1px solid rgba(255, 255, 255, 0.1);
  background: var(--toggle-off-color);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  transition: all var(--toggle-transition);
}

.neo-thumb-core {
  position: absolute;
  inset: 5px;
  border-radius: 50%;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), transparent);
  transition: all var(--toggle-transition);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.neo-thumb-icon {
  position: relative;
  width: 10px;
  height: 10px;
  transition: all var(--toggle-transition);
}

.neo-thumb-wave {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 2px;
  background: var(--toggle-off-color);
  transform: translate(-50%, -50%);
  transition: all var(--toggle-transition);
}

.neo-thumb-pulse {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  border: 1px solid var(--toggle-off-color);
  transform: scale(0);
  opacity: 0;
  transition: all var(--toggle-transition);
}

.neo-gesture-area {
  position: absolute;
  inset: -10px;
  z-index: 0;
}

.neo-interaction-feedback {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 0;
}

.neo-ripple {
  position: absolute;
  top: 50%;
  left: 30%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    var(--toggle-on-color) 0%,
    transparent 70%
  );
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: all 0.4s ease-out;
}

.neo-progress-arc {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  border: 2px solid transparent;
  border-top-color: var(--toggle-on-color);
  transform: translate(-50%, -50%) scale(0) rotate(0deg);
  opacity: 0;
  transition:
    opacity 0.3s ease,
    transform 0.5s ease;
}

.neo-status {
  position: absolute;
  bottom: -20px;
  left: 0;
  width: 100%;
  display: flex;
  justify-content: center;
}

.neo-status-indicator {
  display: flex;
  align-items: center;
  gap: 4px;
}

.neo-status-dot {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background-color: var(--toggle-off-color);
  transition: all var(--toggle-transition);
}

.neo-status-text {
  font-size: 9px;
  font-weight: 600;
  color: var(--toggle-off-color);
  letter-spacing: 1px;
  transition: all var(--toggle-transition);
}

.neo-value-display {
  position: absolute;
  top: -22px;
  right: 0;
  font-size: 12px;
  font-weight: 500;
  color: var(--toggle-off-color);
  opacity: 0;
  transform: translateY(5px);
  transition: all var(--toggle-transition);
}

.neo-value-text {
  transition: all var(--toggle-transition);
}

/* Active states */
.neo-toggle-input:checked + .neo-toggle .neo-thumb {
  transform: translateX(calc(var(--toggle-width) - 38px));
}

.neo-toggle-input:checked + .neo-toggle .neo-thumb-ring {
  background-color: var(--toggle-on-color);
  border-color: rgba(54, 249, 199, 0.3);
  box-shadow: 0 0 15px rgba(54, 249, 199, 0.5);
}

.neo-toggle-input:checked + .neo-toggle .neo-thumb-wave {
  height: 8px;
  width: 8px;
  border-radius: 50%;
  background: transparent;
  border: 1px solid #fff;
}

.neo-toggle-input:checked + .neo-toggle .neo-thumb-pulse {
  transform: scale(1.2);
  opacity: 0.3;
  animation: neo-pulse 1.5s infinite;
}

.neo-toggle-input:checked + .neo-toggle .neo-track-highlight {
  background: linear-gradient(90deg, transparent, rgba(54, 249, 199, 0.2));
  opacity: 1;
}

.neo-toggle-input:checked + .neo-toggle .neo-grid-layer {
  opacity: 1;
}

.neo-toggle-input:checked + .neo-toggle .neo-spectrum-analyzer {
  opacity: 1;
}

.neo-toggle-input:checked + .neo-toggle .neo-spectrum-bar:nth-child(1) {
  animation: neo-spectrum 0.9s infinite;
}

.neo-toggle-input:checked + .neo-toggle .neo-spectrum-bar:nth-child(2) {
  animation: neo-spectrum 0.8s 0.1s infinite;
}

.neo-toggle-input:checked + .neo-toggle .neo-spectrum-bar:nth-child(3) {
  animation: neo-spectrum 1.1s 0.2s infinite;
}

.neo-toggle-input:checked + .neo-toggle .neo-spectrum-bar:nth-child(4) {
  animation: neo-spectrum 0.7s 0.1s infinite;
}

.neo-toggle-input:checked + .neo-toggle .neo-spectrum-bar:nth-child(5) {
  animation: neo-spectrum 0.9s 0.15s infinite;
}

.neo-toggle-input:checked + .neo-toggle .neo-status-dot {
  background-color: var(--toggle-on-color);
  box-shadow: 0 0 8px var(--toggle-on-color);
}

.neo-toggle-input:checked + .neo-toggle .neo-status-text {
  color: var(--toggle-on-color);
}

.neo-toggle-input:checked + .neo-toggle + .neo-value-display {
  opacity: 1;
  transform: translateY(0);
}

.neo-toggle-input:checked + .neo-toggle + .neo-value-display .neo-value-text {
  color: var(--toggle-on-color);
}

.neo-toggle:hover .neo-thumb-ring {
  transform: scale(1.05);
}

.neo-toggle.neo-dragging .neo-track {
  transform: translateZ(-1px) scale(1.02);
}

.neo-toggle.neo-dragging .neo-thumb {
  transition: none;
}

@keyframes neo-pulse {
  0% {
    transform: scale(1);
    opacity: 0.5;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.2;
  }
  100% {
    transform: scale(1);
    opacity: 0.5;
  }
}

@keyframes neo-spectrum {
  0% {
    height: 3px;
  }
  50% {
    height: 8px;
  }
  100% {
    height: 3px;
  }
}

.neo-toggle.neo-activated .neo-ripple {
  width: 100px;
  height: 100px;
  opacity: 0.5;
  transition: all 0.6s ease-out;
}

.neo-toggle.neo-progress .neo-progress-arc {
  opacity: 0.8;
  transform: translate(-50%, -50%) scale(1) rotate(270deg);
  transition:
    opacity 0.3s ease,
    transform 1s ease;
}

.neo-toggle-input:checked + .neo-toggle .neo-status-text::before {
  content: "ACTIVE";
}

.neo-toggle-input:not(:checked) + .neo-toggle .neo-status-text::before {
  content: "STANDBY";
}